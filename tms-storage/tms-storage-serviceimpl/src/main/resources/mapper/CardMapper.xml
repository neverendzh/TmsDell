<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.helloword.mapper.CardMapper">
  <resultMap id="BaseResultMap" type="com.helloword.entity.Card">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="card_num" jdbcType="VARCHAR" property="cardNum" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="active_time" jdbcType="TIMESTAMP" property="activeTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="customerid" jdbcType="INTEGER" property="customerid" />
    <result column="takeby" jdbcType="VARCHAR" property="takeby" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="spare" jdbcType="VARCHAR" property="spare" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, card_num, state, active_time, end_time, customerid, takeby, year, spare
  </sql>

  <select id="selectByExample" parameterType="com.helloword.entity.CardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="getFirstNull" resultMap="BaseResultMap">
    SELECT * FROM t_card WHERE t_card.takeby is null ORDER BY id desc limit 0,1
  </select>

  <select id="findLast" resultMap="BaseResultMap">
    SELECT * FROM t_card ORDER BY id DESC limit 1
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_card
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_card
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.helloword.entity.CardExample">
    delete from t_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.helloword.entity.Card">
    insert into t_card (id, card_num, state, 
      active_time, end_time, customerid, 
      takeby, year, spare
      )
    values (#{id,jdbcType=INTEGER}, #{cardNum,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{activeTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{customerid,jdbcType=INTEGER}, 
      #{takeby,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, #{spare,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.helloword.entity.Card">
    insert into t_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cardNum != null">
        card_num,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="activeTime != null">
        active_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="customerid != null">
        customerid,
      </if>
      <if test="takeby != null">
        takeby,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="spare != null">
        spare,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cardNum != null">
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null">
        #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="takeby != null">
        #{takeby,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="spare != null">
        #{spare,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="saveMuch" parameterType="list">
    INSERT INTO t_card (t_card.card_num,t_card.state) VALUES
    <foreach collection="numList" item="card" separator="," >
      (#{card.cardNum},#{card.state})
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.helloword.entity.CardExample" resultType="java.lang.Long">
    select count(*) from t_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="slelectTcardTakeby" parameterType="java.lang.String" resultMap="BaseResultMap">
   SELECT
        id,
        card_num,
        state,
        active_time,
        end_time,
        customerid,
        takeby,
        t_card.year,
        spare
    FROM
        t_card
    WHERE
        state IS NULL
    ORDER BY
        card_num ASC
    LIMIT 0,10
  </select>

  <update id="updateTakeBy" parameterType="java.lang.String">
      UPDATE t_card
      SET t_card.takeby = #{name}
      WHERE
          id BETWEEN #{id}
      AND #{id2}
  </update>
  <update id="updateByExampleSelective" parameterType="map">
    update t_card
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cardNum != null">
        card_num = #{record.cardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.activeTime != null">
        active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.customerid != null">
        customerid = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.takeby != null">
        takeby = #{record.takeby,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.spare != null">
        spare = #{record.spare,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_card
    set id = #{record.id,jdbcType=INTEGER},
      card_num = #{record.cardNum,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      customerid = #{record.customerid,jdbcType=INTEGER},
      takeby = #{record.takeby,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      spare = #{record.spare,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.helloword.entity.Card">
    update t_card
    <set>
      <if test="cardNum != null">
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null">
        active_time = #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerid != null">
        customerid = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="takeby != null">
        takeby = #{takeby,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="spare != null">
        spare = #{spare,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.helloword.entity.Card">
    update t_card
    set card_num = #{cardNum,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      active_time = #{activeTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      customerid = #{customerid,jdbcType=INTEGER},
      takeby = #{takeby,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      spare = #{spare,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="cardTotalNum" resultType="int">
   SELECT
        count(*) AS invalidateCardNum
    FROM
        t_card
    WHERE
        state LIKE '非正常'
    OR state IS NULL
  </select>

  <select id="cardInvalidateList" resultMap="BaseResultMap">
      SELECT
          *
      FROM
          t_card
      WHERE
          state = '非正常'
  </select>
</mapper>